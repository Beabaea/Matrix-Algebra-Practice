knitr::opts_chunk$set(echo = TRUE)  #ignore this
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("img.txt", header = FALSE)
M = read.csv("img.txt", header = FALSE)
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
View(M)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
# This will perform the calculation, but not update M
M %*% A
M
# This will result in an error because the dimensions do not match
A %*% M
# Correct step:
M <- M %*% A
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
# Correct step:
M <- M %*% A
# This will perform the calculation, but not update M
#M %*% A
# This will result in an error because the dimensions do not match
#A %*% M
M_wrong <- M*x
dim(M)
dim(M_wrong)
Mat <- rbind(
c(1,2),
c(3,4)
)
vec <- c(1, 100)
Mat * vec
new_mat <- t(Mat)*vec
new_mat
new_mat <- t(new_mat)
new_mat
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
x
M<-t(M)*x
Y<-diag(y)
solve(Y)
solve(Y) %*% M
M%*%solve(Y)
M<-M %*% solve(Y)
det(B)
M+5
M
scl<-det(B)
M<-M*scl
eigen(B)
eB<-eigen(B)
eB$vectors[3]
eB$vectors
eB$vectors[3,]
eB$vectors[,3]
View(eB)
eB[["vectors"]]
View(eB$vectors)
eB$vectors[3,]
sum(eB$vectors[3,])
sum(eB$vectors[,3])
eBsum3<-sum(eB$vectors[,3])
M<-M*eBsum3
100*U
svd(H,3)
svd(H)
svd(H)$u
U<-svd(H)$u
100*U
matrix(xy')'
matrix(x,t(y))
?t()
matrix(x)
x<-matrix(x)
y<-t(matrix(y))
x%*%y
xy<-t(x%*%y)
M %*% xy
M<-M %*% xy
U<-svd(H)$u
U<-100*U
M*U
M %*% U
U %*% M
<-MU %*% M
M<-U %*% M
H
svd(H)$D
svd(H)
svd(H)$d
sum(svd(H)$d)
<-sum(svd(H))
sum(svd(H))
sum(svd(H)$d)
M/dsum
dsum<-sum(svd(H)$d)
M/dsum
M<-M/dsum
image(M, col = gray((1:100)/100), asp = 1, axes = FALSE)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
eB<-eigen(B)
eBsum3<-sum(eB$vectors[,3])
M<-M*eBsum3
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
M<-M %*% xy
U<-svd(H)$u
U<-100*U
M<-U %*% M
dsum<-sum(svd(H)$d)
M<-M/dsum
image(M, col = gray((1:100)/100), asp = 1, axes = FALSE)
M<-M*(dsum^.5)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
eB<-eigen(B)
eBsum3<-sum(eB$vectors[3,])
M<-M*eBsum3
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
M<-M %*% xy
U<-svd(H)$u
U<-100*U
M<-U %*% M
t(M) %*% xy
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
eB<-eigen(B)
eBsum3<-sum(eB$vectors[3,])
t(M)*eBsum3
eB<-eigen(B)
eBsum3<-sum(eB$vectors[3,])
M<-t(M)*eBsum3
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
M<-t(M) * xy
xy* t(M)
xy * t(M)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
eB<-eigen(B)
eBsum3<-sum(eB$vectors[,3])
M<-M*eBsum3
xy * t(M)
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
M<-t(M)*x
Y<-diag(y)
M<-M %*% solve(Y)
scl<-det(B)
M<-M*scl
eB<-eigen(B)
eBsum3<-sum(eB$vectors[,3])
M<-M*eBsum3
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
xy * t(M)
M<-xy * t(M)
U<-svd(H)$u
U<-100*U
M<-t(M) * U
U*t(M)
U<-svd(H)$u
U<-100*U
U
U * t(M)
t(U) * M
U * M
View(M)
dim(M)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
dim(M)
M<-M %*% A
dim(M)
M<-t(M)*x
dim(M)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
# Correct step:
M <- M %*% A
# This will perform the calculation, but not update M
#M %*% A
# This will result in an error because the dimensions do not match
#A %*% M
M_wrong <- M*x
dim(M)
dim(M_wrong)
Mat <- rbind(
c(1,2),
c(3,4)
)
vec <- c(1, 100)
Mat * vec
new_mat <- t(Mat)*vec
new_mat
new_mat <- t(new_mat)
new_mat
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv(here::here("img.txt"), header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
M<-M %*% A
dim(M)
M<-M*t(x)
M<-t(M)*x
M<-t(M)
dim(M)
Y<-diag(y)
M<-M %*% solve(Y)
solve(Y) %*% M
dim( solve(Y) %*% M)
M<-solve(Y) %*% M
scl<-det(B)
M<-M*scl
dim(M)
eB<-eigen(B)
eBsum3<-sum(eB$vectors[,3])
eB<-eigen(B)
eBsum3<-sum(eB$vectors[,3])
M<-M*eBsum3
dim(M)
x<-matrix(x)
y<-t(matrix(y))
xy<-t(x%*%y)
M<-xy * t(M)
xy * t(M)
